window.SIDEBAR_ITEMS = {"constant":[["AVERAGE_ON_INITIALIZE_RATIO","We assume that ~5% of the block weight is consumed by `on_initialize` handlers. This is used to limit the maximal weight of a single extrinsic."],["MAXIMUM_BLOCK_WEIGHT","We allow for 0.5 of a second of compute with a 12 second average block time."],["MINER_MAX_ITERATIONS","Maximum number of iterations for balancing that will be executed in the embedded OCW miner of election provider multi phase."],["NORMAL_DISPATCH_RATIO","We allow `Normal` extrinsics to fill up the block up to 75%, the rest can be used by `Operational` extrinsics."],["VERSION",""],["WASM_BINARY",""],["WASM_BINARY_BLOATY",""]],"enum":[["BalancesCall","Contains one variant per dispatchable that can be called by an extrinsic."],["DispatchClass","A generalized group of dispatch types."],["OriginCaller",""],["RuntimeCall",""],["RuntimeEvent",""],["StakerStatus","Indicates the initial status of the staker."],["SystemCall","Contains one variant per dispatchable that can be called by an extrinsic."],["TimestampCall","Contains one variant per dispatchable that can be called by an extrinsic."]],"fn":[["native_version","The version information used to identify this runtime when compiled natively."]],"macro":[["construct_runtime","Construct a runtime, with the given name and the given pallets."],["parameter_types","Create new implementations of the `Get` trait."]],"mod":[["api",""],["constants",""],["opaque","Opaque types. These are used by the CLI to instantiate machinery that donâ€™t need to know the specifics of the runtime. They can then be made to be agnostic over specific formats of data like extrinsics, allowing for them to continue syncing the network through upgrades to even the core data structures."]],"struct":[["AdjustmentVariable",""],["BalanceToU256",""],["BasicDeposit",""],["BetterUnsignedThreshold",""],["BlockExecutionWeight","Time to execute an empty block. Calculated by multiplying the Average with `1.0` and adding `0`."],["BlockHashCount",""],["BondingDuration",""],["ChainIdentifier",""],["CurrencyAdapter","Implements the transaction payment for a pallet implementing the `Currency` trait (eg. the pallet_balances) using an unbalance handler (implementing `OnUnbalanced`)."],["DKGAccountId",""],["DecayPercentage",""],["ElectionProviderBenchmarkConfig","The numbers configured here could always be more than the the maximum limits of staking pallet to ensure election snapshot will not run out of memory. For now, we set them to smaller values since the staking is bounded and the weight pipeline takes hours for this single pallet."],["ExistentialDeposit",""],["ExtrinsicBaseWeight","Time to execute a NO-OP extrinsic, for example `System::remark`. Calculated by multiplying the Average with `1.0` and adding `0`."],["FieldDeposit",""],["GenesisConfig",""],["HistoryDepth",""],["IdentityFee","Implementor of `WeightToFee` that maps one unit of weight to one unit of fee."],["ImOnlineUnsignedPriority",""],["IndexDeposit",""],["MaxActiveValidators",""],["MaxAdditionalFields",""],["MaxAuthorityProposers",""],["MaxElectingVoters",""],["MaxExternalProposerAccounts",""],["MaxKeys",""],["MaxLocks",""],["MaxNominations",""],["MaxNominatorRewardedPerValidator",""],["MaxOnChainElectableTargets",""],["MaxOnChainElectingVoters",""],["MaxPeerDataEncodingSize",""],["MaxPeerInHeartbeats",""],["MaxPointsToBalance",""],["MaxRegistrars",""],["MaxResources",""],["MaxSubAccounts",""],["MaxVotes",""],["MaximumMultiplier",""],["MinerMaxLength",""],["MinerMaxWeight",""],["MinimumMultiplier",""],["MinimumPeriod",""],["MultiPhaseUnsignedPriority",""],["NominationPoolsPalletId",""],["NposSolution16",""],["OffchainRepeat",""],["OffendingValidatorsThreshold",""],["Offset",""],["OnChainSeqPhragmen",""],["OperationalFeeMultiplier",""],["PalletId","A pallet identifier. These are per pallet and should be stored in a registry somewhere."],["PalletInfo","Provides an implementation of `PalletInfo` to provide information about the pallet setup in the runtime."],["Perbill","A fixed point representation of a number in the range [0, 1]."],["Period",""],["Permill","A fixed point representation of a number in the range [0, 1]."],["PostUnbondPoolsWindow",""],["ProposalLifetime",""],["RefreshDelay",""],["RewardCurve",""],["RocksDbWeight","By default, Substrate uses RocksDB, so this will be the weight used throughout the runtime."],["Runtime",""],["RuntimeApi",""],["RuntimeApiImpl","Implements all runtime apis for the client side."],["RuntimeBlockLength",""],["RuntimeBlockWeights",""],["RuntimeOrigin","The runtime origin type representing the origin of a call."],["SS58Prefix",""],["SessionsPerEra",""],["SignedDepositBase",""],["SignedDepositByte",""],["SignedPhase",""],["SignedRewardBase",""],["SlashDeferDuration",""],["StakingBenchmarkingConfig",""],["StakingUnsignedPriority",""],["StorageInfo","Metadata about storage from the runtime."],["SubAccountDeposit",""],["TargetBlockFullness",""],["TargetedFeeAdjustment","A struct to update the weight multiplier per block. It implements `Convert<Multiplier, Multiplier>`, meaning that it can convert the previous multiplier to the next one. This should be called on `on_finalize` of a block, prior to potentially cleaning the weight data from the system pallet."],["TimeToRestart",""],["TransactionByteFee",""],["U256ToBalance",""],["UnsignedInterval",""],["UnsignedPhase",""],["UnsignedPriority",""],["UnsignedProposalExpiry",""],["Version",""],["WebbMinerConfig",""],["Weight",""]],"trait":[["BuildStorage","Complex storage builder stuff."],["KeyOwnerProofSystem","Something which can compute and check proofs of a historical key owner and return full identification data of that key owner."],["Randomness","A trait that is able to provide randomness."],["StorageValue","A trait for working with macro-generated storage values under the substrate storage API."]],"type":[["AccountId","Some way of identifying an account on the chain. We intentionally make it equivalent to the public key of our transaction signing scheme."],["AccountIndex",""],["Address","The address format for describing accounts."],["AllPallets","All pallets included in the runtime as a nested tuple of types."],["AllPalletsReversedWithSystemFirst","All pallets included in the runtime as a nested tuple of types in reversed order. With the system pallet first."],["AllPalletsWithSystem","All pallets included in the runtime as a nested tuple of types."],["AllPalletsWithSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order."],["AllPalletsWithoutSystem","All pallets included in the runtime as a nested tuple of types. Excludes the System pallet."],["AllPalletsWithoutSystemReversed","All pallets included in the runtime as a nested tuple of types in reversed order. Excludes the System pallet."],["Aura",""],["AuraConfig",""],["BagsList",""],["Balances",""],["BalancesConfig",""],["Block","Block type as expected by this runtime."],["BridgeRegistry",""],["BridgeRegistryConfig",""],["CheckedExtrinsic",""],["DKG",""],["DKGConfig",""],["DKGId","Identity of a DKG authority using ECDSA as its crypto."],["DKGProposalHandler",""],["DKGProposals",""],["DKGProposalsConfig",""],["ElectionProviderMultiPhase",""],["Executive","Executive: handles dispatch to the various modules."],["Grandpa",""],["GrandpaConfig",""],["Hash","A hash of some data used by the chain."],["Header","Block header type as expected by this runtime."],["Historical",""],["Identity",""],["ImOnline",""],["ImOnlineConfig",""],["Index","Index of a transaction in the chain."],["Indices",""],["IndicesConfig",""],["Multiplier","Fee multiplier."],["NominationPools",""],["NominationPoolsConfig",""],["RandomnessCollectiveFlip",""],["Reputation","Reputation type"],["Session",""],["SessionConfig",""],["Signature","Alias to 512-bit hash when used in the context of a transaction signature on the chain."],["SignedExtra","The SignedExtension to the basic transaction logic."],["SignedPayload",""],["Staking",""],["StakingConfig",""],["Sudo",""],["SudoConfig",""],["System",""],["SystemConfig",""],["Timestamp",""],["TransactionPayment",""],["TransactionPaymentConfig",""],["UncheckedExtrinsic","Unchecked extrinsic type as expected by this runtime."]]};