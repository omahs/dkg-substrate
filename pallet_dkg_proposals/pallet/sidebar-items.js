window.SIDEBAR_ITEMS = {"enum":[["Call","Contains one variant per dispatchable that can be called by an extrinsic."],["Error","Custom dispatch errors of this pallet."],["Event","The event emitted by this pallet."]],"fn":[["__type_value_for_default_for_proposer_threshold",""]],"struct":[["DefaultForProposerThreshold",""],["GenesisConfig","Can be used to configure the genesis state of this pallet."],["Pallet","The pallet implementing the on-chain logic."]],"trait":[["Config","The module configuration trait."]],"type":[["AuthorityProposers","Tracks the authorities that are proposers so we can properly update the proposer set across sessions and authority changes."],["ChainNonces","All whitelisted chains and their respective transaction counts"],["ExternalAuthorityProposerAccounts","Tracks current proposer set external accounts"],["ExternalProposerAccounts","Tracks current proposer set external accounts Currently meant to store Ethereum compatible 64-bytes ECDSA public keys"],["Module","Type alias to `Pallet`, to be used by `construct_runtime`."],["ProposerCount","Number of proposers in set"],["ProposerSetUpdateProposalNonce","Proposer Set Update Proposal Nonce"],["ProposerThreshold","Number of votes required for a proposal to execute"],["Proposers","Tracks current proposer set"],["Resources","Utilized by the bridge software to map resource IDs to actual methods"],["Votes","All known proposals. The key is the hash of the call and the deposit ID, to ensure itâ€™s unique."]]};