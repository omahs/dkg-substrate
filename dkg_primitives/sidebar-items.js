window.SIDEBAR_ITEMS = {"constant":[["DKG_ENGINE_ID",""],["GENESIS_AUTHORITY_SET_ID","Authority set id starts with zero at genesis"],["GOSSIP_MESSAGE_RESENDING_LIMIT","Gossip message resending limit for outbound messages"],["KEYGEN_TIMEOUT","The keygen timeout limit in blocks before we consider misbehaviours"],["KEY_TYPE",""],["OFFLINE_TIMEOUT","The offline timeout limit in blocks before we consider misbehaviours"],["PROPOSAL_SIGNATURE_LENGTH",""],["SIGN_TIMEOUT","The sign timeout limit in blocks before we consider misbehaviours"],["UNTRACK_INTERVAL",""]],"enum":[["BloomInput",""],["ConsensusLog",""],["DKGPayloadKey",""],["DKGReport",""],["EnvelopedDecoderError","DecoderError for typed transactions."],["FromDecStrErr","Conversion from decimal string error"],["FromStrRadixErrKind","A list of error categories encountered when parsing numbers."],["MisbehaviourType",""],["ProposalAction",""],["ProposalKind","Proposal kind enum"],["ReceiptAny",""],["ReceiptV2",""],["ReceiptV3",""],["TransactionAction",""],["TransactionV1",""],["TransactionV2",""],["TypedChainId","Proposal Target Chain and its type (6 bytes)."]],"fn":[["keccak_256","Utility fn to calculate keccak 256 has"]],"macro":[["if_ethbloom","Conditional compilation depending on whether ethereum-types is built with ethbloom support."]],"mod":[["crypto",""],["dkg_key_cli",""],["handlers",""],["keys",""],["offchain",""],["proposal",""],["traits",""],["types",""],["util","Utility functions for Ethereum."],["utils",""]],"struct":[["AccessListItem",""],["Account",""],["AggregatedMisbehaviourReports",""],["AggregatedPublicKeys",""],["AuthoritySet",""],["Block",""],["Bloom","Bloom hash type with 256 bytes (2048 bits) size."],["BloomRef",""],["Commitment",""],["CustomU32Getter","A custom get Struct to allow to import runtime values into the dkg gadget"],["EIP1559Transaction",""],["EIP1559TransactionMessage",""],["EIP2930Transaction",""],["EIP2930TransactionMessage",""],["EIP658ReceiptData",""],["FromStrRadixErr","The error type for parsing numbers from strings."],["FrontierReceiptData",""],["FunctionSignature","Proposal Target Function Signature (4 bytes)."],["H128","Fixed-size uninterpreted hash type with 16 bytes (128 bits) size."],["H160","Fixed-size uninterpreted hash type with 20 bytes (160 bits) size."],["H264",""],["H32",""],["H512","Fixed-size uninterpreted hash type with 64 bytes (512 bits) size."],["H520",""],["H64",""],["Header","Ethereum header definition."],["LegacyTransaction",""],["LegacyTransactionMessage",""],["Log",""],["OffchainSignedProposals",""],["PartialHeader","Partial header definition without ommers hash and transactions root."],["ProposalHeader","Proposal Header (40 bytes). ┌────────────────────┬─────────────────┬───────────────┐ │                    │                 │               │ │   Resource ID 32B  │ Function Sig 4B │    Nonce 4B   │ │                    │                 │               │ └────────────────────┴─────────────────┴───────────────┘"],["ProposalNonce","Proposal Nonce (4 bytes)."],["RefreshProposal",""],["RefreshProposalSigned",""],["ResourceId","Proposal Target `ResourceId` (32 bytes)."],["StoredUnsignedProposal","An unsigned proposal represented in pallet storage We store the creation timestamp to purge expired proposals"],["TransactionRecoveryId",""],["TransactionSignature",""],["U128","Little-endian large integer type 128-bit unsigned integer."],["U256","Little-endian large integer type 256-bit unsigned integer."],["U512","Little-endian large integer type 512-bits unsigned integer."],["U64","Little-endian large integer type Unsigned 64-bit integer."],["UnsignedProposal",""]],"trait":[["BigEndianHash",""],["DKGApi",""],["EnvelopedDecodable","Decodable typed transactions."],["EnvelopedEncodable","Encodable typed transactions."],["ProposalHandlerTrait",""]],"type":[["AccessList",""],["Address",""],["AuthorityIndex",""],["AuthoritySetId",""],["BlockAny",""],["BlockV0",""],["BlockV1",""],["BlockV2",""],["EIP1559ReceiptData",""],["EIP2930ReceiptData",""],["MaxAuthorities",""],["MaxKeyLength","Max size for signatures"],["MaxProposalLength",""],["MaxReporters",""],["MaxResources","Max resources to store onchain"],["MaxSignatureLength","Max size for signatures"],["MaxVotes","Max votes to store onchain"],["MmrRootHash","The type used to represent an MMR root hash."],["Public",""],["PublicKeyAndSignature",""],["ReceiptV0",""],["ReceiptV1",""],["Secret",""],["SessionId","A typedef for keygen set / session id"],["Signature",""],["TransactionAny",""],["TransactionV0",""]]};